pipeline {
  agent any

  environment {
    SONAR_URL = credentials('sonar-url')
    DOCKER_IMAGE = "guycalledavinash/spring-protein-app:${BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        echo "Checking out the repository..."
        git branch: 'main', url: 'https://github.com/guycalledavinash/ci-cd.git'
      }
    }

    stage('Build and Test') {
      steps {
        echo "Building the project and running tests..."
        sh 'mvn clean package -f springboot-protein-app/pom.xml'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_AUTH_TOKEN = credentials('sonar-token')
      }
      steps {
        echo "Running SonarQube analysis..."
        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            mvn sonar:sonar \
              -f springboot-protein-app/pom.xml \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        echo "Building and pushing Docker image..."
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
          sh '''
            cd springboot-protein-app/
            docker build -t $DOCKER_IMAGE .
            echo $PASSWORD | docker login -u $USERNAME --password-stdin
            docker push $DOCKER_IMAGE
          '''
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "ci-cd"
        GIT_USER_NAME = "guycalledavinash"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'github-token')]) {
          sh '''
            git config user.email "cavinashreddy97@gmail.com"
            git config user.name "Avinash Reddy"

            # Replace image tag in deployment.yaml
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" springboot-protein-app-manifests/deployment.yaml

            git add springboot-protein-app-manifests/deployment.yaml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }

  post {
    always {
      echo 'Pipeline execution complete.'
    }
    success {
      echo '✅ CI/CD pipeline completed successfully.'
    }
    failure {
      echo '❌ CI/CD pipeline failed.'
    }
  }
}
